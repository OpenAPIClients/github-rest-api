# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  release:
    types:
      - published
  # Runs on pushes targeting the default branch
#  push:
#    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: node_modules
          key: github-rest-api-dependencies-${{ hashFiles('package.json') }}
      - name: Install dependencies
        run: npm i && npx openapi-generator-cli help
        if: steps.npm-cache.outputs.cache-hit != 'true'
  # Single deploy job since we're just deploying
  deploy:
    needs:
      - install-dependencies
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: github-rest-api-dependencies-${{ hashFiles('package.json') }}
      - run: npm run generate:html
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload generated pages
          path: 'build/pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
